{"ast":null,"code":"var _jsxFileName = \"/Users/eunjung/Desktop/B612 FE study/5-react.js-hooks/src/PasswordText.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport \"./PasswordCheck.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction PasswordInput() {\n  _s();\n  const [showText, setShowText] = useState(false);\n  useEffect(() => {\n    const interval = setInterval(() => {\n      setShowText(prevShowText => !prevShowText);\n    }, 500);\n    return () => clearInterval(interval);\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: `blinking-text ${showText ? \"visible\" : \"\"}`,\n      children: \"plz enter password\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 16,\n    columnNumber: 5\n  }, this);\n}\n_s(PasswordInput, \"ZHom8uXP0ecVQTI3aNnrYzjJuEM=\");\n_c = PasswordInput;\nexport default PasswordInput;\nvar _c;\n$RefreshReg$(_c, \"PasswordInput\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","PasswordInput","_s","showText","setShowText","interval","setInterval","prevShowText","clearInterval","children","className","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/eunjung/Desktop/B612 FE study/5-react.js-hooks/src/PasswordText.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport \"./PasswordCheck.css\";\n\nfunction PasswordInput() {\n  const [showText, setShowText] = useState(false);\n\n  useEffect(() => {\n    const interval = setInterval(() => {\n      setShowText((prevShowText) => !prevShowText);\n    }, 500);\n\n    return () => clearInterval(interval);\n  }, []);\n\n  return (\n    <div>\n      <div className={`blinking-text ${showText ? \"visible\" : \"\"}`}>\n        plz enter password\n      </div>\n    </div>\n  );\n}\n\nexport default PasswordInput;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAO,qBAAqB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE7B,SAASC,aAAaA,CAAA,EAAG;EAAAC,EAAA;EACvB,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGP,QAAQ,CAAC,KAAK,CAAC;EAE/CC,SAAS,CAAC,MAAM;IACd,MAAMO,QAAQ,GAAGC,WAAW,CAAC,MAAM;MACjCF,WAAW,CAAEG,YAAY,IAAK,CAACA,YAAY,CAAC;IAC9C,CAAC,EAAE,GAAG,CAAC;IAEP,OAAO,MAAMC,aAAa,CAACH,QAAQ,CAAC;EACtC,CAAC,EAAE,EAAE,CAAC;EAEN,oBACEL,OAAA;IAAAS,QAAA,eACET,OAAA;MAAKU,SAAS,EAAG,iBAAgBP,QAAQ,GAAG,SAAS,GAAG,EAAG,EAAE;MAAAM,QAAA,EAAC;IAE9D;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV;AAACZ,EAAA,CAlBQD,aAAa;AAAAc,EAAA,GAAbd,aAAa;AAoBtB,eAAeA,aAAa;AAAC,IAAAc,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}